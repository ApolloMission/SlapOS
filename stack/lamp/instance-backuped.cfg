[buildout]

extends =
  ${template-apache-php:output}

parts =
  request-mariadb
  request-mariadb-pseudo-replicating
  request-apache-backup
  request-pull-backup-server
  request-pull-backup-server-apache
  url
  apache-php
  stunnel
  certificate-authority
  ca-stunnel
  logrotate
  logrotate-entry-apache
  logrotate-entry-stunnel
  cron
  cron-entry-logrotate
  dropbear-server
  sshkeys-authority
  dropbear-server-pbs-authorized-key
  logrotate-entry-equeue
  logfollower
  agent
  agent-wrapper
  watchdog

[uuid-generator]
recipe = slapos.cookbook:uuid
database = $${buildout:directory}/.uuid.db
uuids = mariadb-backup apache-backup

[sshkeys-directory]
recipe = slapos.cookbook:mkdirectory
requests = $${directory:sshkeys}/requests/
keys = $${directory:sshkeys}/keys/

[sshkeys-authority]
recipe = slapos.cookbook:sshkeys_authority
request-directory = $${sshkeys-directory:requests}
keys-directory = $${sshkeys-directory:keys}
wrapper = $${basedirectory:services}/sshkeys_authority
keygen-binary = ${dropbear:location}/bin/dropbearkey

[sshkeys-dropbear]
<= sshkeys-authority
recipe = slapos.cookbook:sshkeys_authority.request
name = dropbear
type = rsa
executable = $${dropbear-server:wrapper}
public-key = $${dropbear-server:rsa-keyfile}.pub
private-key = $${dropbear-server:rsa-keyfile}
wrapper = $${basedirectory:services}/sshd

[dropbear-server]
recipe = slapos.cookbook:dropbear
host = $${slap-network-information:global-ipv6}
port = 2222
home = $${directory:ssh}
wrapper = $${rootdirectory:bin}/raw_sshd
shell = $${rdiff-backup-server:wrapper}
rsa-keyfile = $${directory:ssh}/server_key.rsa
dropbear-binary = ${dropbear:location}/sbin/dropbear

[dropbear-server-pbs-authorized-key]
<= dropbear-server
recipe = slapos.cookbook:dropbear.add_authorized_key
key = $${request-pull-backup-server:connection-ssh-key}

[rdiff-backup-server]
recipe = slapos.cookbook:pbs
client = false
path = $${directory:htdocs}
wrapper = $${rootdirectory:bin}/rdiffbackup-server
rdiffbackup-binary = ${buildout:bin-directory}/rdiff-backup

[logfollower]
recipe = slapos.cookbook:logfollower
binary = ${buildout:bin-directory}/wp-logfollower
wait-for-creation = true
rotated = true
regex = .+PHP Warning: +mysql_.+
url = $${agent-data:url}log/mariadb
wrapper = $${basedirectory:services}/logfollower
timeout = 120
file = $${apache-php:php-error-log}

[agent-data]
host = $${slap-network-information:global-ipv6}
port = 8081
url = http://[$${:host}]:$${:port}/

[agent]
<= agent-data
   slap-connection
recipe = slapos.cookbook:agent
database = $${rootdirectory:srv}/agent.db
equeue-socket = $${equeue:socket}
callbacks-directory = $${directory:agent-callbacks}
wrapper = $${rootdirectory:bin}/agent
gunicorn = ${buildout:bin-directory}/gunicorn
partition-id = $${slap-connection:partition-id}
computer-id = $${slap-connection:computer-id}
config-file = $${rootdirectory:etc}/agent.py
type = apache-php
peers =
    $${request-pull-backup-server:connection-agent-url}
    $${request-mariadb:connection-agent-url}
    $${request-mariadb-pseudo-replicating:connection-agent-url}
    $${request-apache-backup:connection-agent-url}

[agent-wrapper]
recipe = slapos.cookbook:submanager
subcommand = $${agent:wrapper}
wrapper = $${basedirectory:services}/agent
pid-file = $${basedirectory:run}/agent.pid
binary = ${buildout:bin-directory}/submanager
config-files =
    $${agent:config-file}

[watchdog]
recipe = slapos.cookbook:watchdog
agent-url = $${agent-data:url}
wrapper = $${basedirectory:services}/watchdog
binary = ${buildout:bin-directory}/wp-watchdog
master-url = $${slap-connection:server-url}
cert-file = $${slap-connection:cert-file}
key-file = $${slap-connection:key-file}
software-release-url = $${slap-connection:software-release-url}

[logrotate-entry-equeue]
<= logrotate
recipe = slapos.cookbook:logrotate.d
name = equeue
log = $${equeue:log}
frequency = daily
rotate-num = 30

[equeue]
recipe = slapos.cookbook:equeue
socket = $${basedirectory:run}/equeue.sock
log = $${basedirectory:log}/equeue.log
database = $${rootdirectory:srv}/equeue.db
wrapper = $${basedirectory:services}/equeue
equeue-binary = ${buildout:bin-directory}/equeue


[request-pull-backup-server]
<= slap-connection
recipe = slapos.cookbook:request
name = Pull Backup Server
software-url = $${slap-connection:software-release-url}
software-type = pull-backup
config = request-agent-url
config-request-agent-url = http://[$${agent-data:host}]:$${agent-data:port}/
return = ssh-key agent-url
slave = false

[request-mariadb]
software-type = mariadb-pbsready-export
config = authorized-key pbs-id request-agent-url
config-authorized-key = $${request-pull-backup-server:connection-ssh-key}
config-pbs-id = $${uuid-generator:uuid-mariadb-backup}
config-request-agent-url = http://[$${agent-data:host}]:$${agent-data:port}/
return = url agent-url

[request-mariadb-pseudo-replicating]
<= slap-connection
recipe = slapos.cookbook:request
name = MariaDB Backup
software-url = $${slap-connection:software-release-url}
software-type = mariadb-pbsready-import
config = authorized-key pbs-id request-agent-url
config-authorized-key = $${request-pull-backup-server:connection-ssh-key}
config-pbs-id = $${uuid-generator:uuid-mariadb-backup}
config-request-agent-url = http://[$${agent-data:host}]:$${agent-data:port}/
return = url agent-url
slave = false

[request-apache-backup]
<= slap-connection
recipe = slapos.cookbook:request
name = Apache Backup
software-url = $${slap-connection:software-release-url}
software-type = apache-backup
return = url agent-url
config = authorized-key pbs-id request-agent-url proxy-url
config-authorized-key = $${request-pull-backup-server:connection-ssh-key}
config-pbs-id = $${uuid-generator:uuid-apache-backup}
config-request-agent-url = http://[$${agent-data:host}]:$${agent-data:port}/
config-proxy-url = $${url:url}
return = url agent-url

[request-pull-backup-server-apache]
<= slap-connection
recipe = slapos.cookbook:request
name = Pull Backup Server pulling from main Apache
software-url = $${slap-connection:software-release-url}
software-type = pull-backup
slave = true
config = url id type request-agent-url authorized-key frequency name
config-url = ssh://nobody@[$${dropbear-server:host}]:$${dropbear-server:port}/$${rdiff-backup-server:path}
config-id = $${uuid-generator:uuid-apache-backup}
config-type = pull
config-request-agent-url = http://[$${agent-data:host}]:$${agent-data:port}/
config-authorized-key = $${sshkeys-dropbear:public-key-value}
config-frequency = 0 * * * *
config-name = $${:name}
return = feed-url agent-url

[basedirectory]
agent = $${rootdirectory:etc}/agent/

[directory]
ssh = $${rootdirectory:etc}/ssh/
sshkeys = $${rootdirectory:srv}/sshkeys
agent-callbacks = $${basedirectory:agent}/callbacks/

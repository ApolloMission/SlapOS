#!{{ extra_eggs_interpreter }}

import cgi
import cgitb
import Cookie
import jinja2
import json
import os
import subprocess
import sys
import urllib

cgitb.enable(display=0, logdir="/tmp/cgi.log")

form = cgi.FieldStorage()
cookie = Cookie.SimpleCookie()

cgi_path = "{{ cgi_directory }}"


def forward_form():
  command = os.path.join(cgi_path, form['posting-script'].value)
  params_dict = {}
  for f in form:
    params_dict[f] = form[f].value
  del params_dict['posting-script']
  os.environ['QUERY_STRING'] = urllib.urlencode(params_dict)
  try:
    if os.access(command, os.X_OK):
      print '\n', subprocess.check_output([command])
  except subprocess.CalledProcessError:
    print "There is a problem with sub-process"
    pass


def return_document():
  command = os.path.join(cgi_path, form['script'].value)
  #XXX this functions should be called only for display,
  #so a priori it doesn't need form data
  os.environ['QUERY_STRING'] = ''
  try:
    if os.access(command, os.X_OK):
      print '\n', subprocess.check_output([command])
    elif os.access(command, os.R_OK):
      print open(command).read()
    else:
      raise OSError
  except (subprocess.CalledProcessError, OSError):
    print "<p>File cannot be found</p>"


def make_menu():
  # Transform deep-2 tree in json
  folder_list = {} 
  for folder in os.listdir(cgi_path):
    if os.path.isdir(os.path.join(cgi_path, folder)):
      folder_list[folder] = []
  for folder in folder_list:
    for file in os.listdir(os.path.join(cgi_path, folder)):
      if os.path.isfile(os.path.join(cgi_path, folder, file)):
        folder_list[folder].append(file)
  return folder_list


# Beginning of response
print "Content-Type: text/html"

# Check if user is logged
if "password" in form:
  password = form['password'].value
  if password == '{{ password }}' :
    cookie['password'] = password
    print cookie
else:
  cookie_string = os.environ.get('HTTP_COOKIE')
  if cookie_string:
    cookie.load(cookie_string)
    try:
      password = cookie['password'].value
    except KeyError:
      password = None
  else:
    password = None

print '\n'

if not password or password != '{{ password }}':
  print "<html><body>"
  if password is None:
    print "<h1>This is the monitoring interface</h1>"
  else:
    print "<h1>Error</h1><p>Wrong password</p>"
  print """
  <p>Please enter the monitor_password in the next field to access the data</p>
  <form action="/index.cgi" method="post">
    Password : <input type="password" name="password">
    <input type="submit" value="Access">
  </form>
  </body></html>"""

# redirection to the required script/page
else:
  print
  if "posting-script" in form:
    forward_form()
  elif "script" in form:
    return_document()
  else:
    html_base = jinja2.Template(open('{{ index_template }}').read())
    print
    print html_base.render(tree=make_menu(), default_page="{{ default_page }}")

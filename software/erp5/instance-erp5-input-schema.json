{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "extends": "./schema-definitions.json#",
  "description": "Parameters to instantiate ERP5",
  "additionalProperties": false,
  "properties": {
    "site-id": {
      "description": "ERP5Site object's id",
      "default": "erp5",
      "type": "string"
    },
    "timezone": {
      "description": "Main site's timezone",
      "default": "UTC",
      "type": "string"
    },
    "deadlock-debugger-password": {
      "description": "Password for /manage_debug_threads",
      "default": "random",
      "type": "string"
    },
    "inituser-login": {
      "description": "Login of the initial/rescue user",
      "default": "zope",
      "type": "string"
    },
    "inituser-password": {
      "description": "Password of the initial/rescue user",
      "default": "random",
      "type": "string"
    },
    "developer-list": {
      "description": "List of logins which should get the Developper role (required to modify portal_components' content)",
      "default": "inituser-login's value",
      "items": {
        "pattern": "/^\\S+$/",
        "type": "string"
      },
      "uniqueItems": true,
      "type": "array"
    },
    "hosts": {
      "description": "Host entries to be used in addition to and/or overriding auto-generated ones",
      "default": {
        "erp5-catalog-0": "some-ip",
        "erp5-catalog-...": "some-ip",
        "erp5-cloudooo": "some-ip",
        "erp5-memcached-persistent": "some-ip",
        "erp5-memcached-volatile": "some-ip"
      },
      "patternProperties": {
        ".*": {
          "description": "An IP to which current entry will resolve",
          "type": "string"
        }
      },
      "type": "object"
    },
    "frontend": {
      "description": "Front-end slave instance request parameters",
      "properties": {
        "software-url": {
          "description": "Front-end's software type. If this parameter is the empty string, no front-end instance is requested.",
          "default": "",
          "type": "string"
        },
        "domain": {
          "description": "The domain name to request front-end to respond as.",
          "default": "",
          "type": "string"
        },
        "software-type": {
          "description": "Request a front-end slave instance of this software type.",
          "default": "RootSoftwareInstance",
          "type": ""
        },
        "instance-guid": {
          "description": "GUID of computer instance must be requested on. Mandatory if software-url is a non-empty string.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "zope-partition-dict": {
      "description": "Zope layout definition",
      "patternProperties": {
        ".*": {
          "additionalProperties": false,
          "properties": {
            "family": {
              "description": "The family this partition is part of. For example: 'public', 'admin', 'backoffice', 'web-service'... Each family gets its own balancer entry. It has no special meaning for the system.",
              "default": "default",
              "type": "string"
            },
            "instance-count": {
              "description": "Number of Zopes to setup on this partition",
              "default": 1,
              "type": "integer"
            },
            "thread-amount": {
              "description": "Number of worker threads for each created Zope process",
              "default": 1,
              "type": "integer"
            },
            "timerserver-interval": {
              "description": "Timerserver tick perdiod, in seconds, or 0 to disable",
              "default": 5,
              "type": "integer"
            },
            "webdav": {
              "description": "Serve webdav queries, implies timerserver-interval=0 (disabled). Mixing webdav and non-webdav nodes in a single family will give unspecified results.",
              "default": false,
              "type": "boolean"
            },
            "longrequest-logger-interval": {
              "description": "Period, in seconds, with which LongRequestLogger polls worker thread stack traces, or -1 to disable",
              "default": -1,
              "type": "integer"
            },
            "longrequest-logger-timeout": {
              "description": "Transaction duration after which LongRequestLogger will start logging its stack trace, in seconds",
              "default": 1,
              "type": "integer"
            },
            "port-base": {
              "allOf": [{
                "$ref": "#/definitions/tcpv4port"
              }, {
                "description": "Start allocating ports at this value. Useful if one needs to make several partitions share the same port range (ie, several partitions bound to a single address)",
                "default": 2200
              }]
            },
            "computer-guid": {
              "description": "GUID of computer instance must be requested on",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "kumofs-computer-guid": {
      "description": "GUID of computer instance must be requested on",
      "type": "string"
    },
    "kumofs": {
      "description": "Persistent memcached service",
      "additionalProperties": {
        "$ref": "./instance-kumofs-input-schema.json#properties"
      },
      "type": "object"
    },
    "memcached-computer-guid": {
      "description": "GUID of computer instance must be requested on",
      "type": "string"
    },
    "memcached": {
      "description": "Volatile memcached service",
      "additionalProperties": {
        "$ref": "./instance-kumofs-input-schema.json#properties"
      },
      "type": "object"
    },
    "cloudooo-computer-guid": {
      "description": "GUID of computer instance must be requested on",
      "type": "string"
    },
    "cloudooo": {
      "description": "Format conversion service",
      "additionalProperties": {
        "$ref": "./instance-cloudooo-input-schema.json#properties"
      },
      "type": "object"
    },
    "mariadb-computer-guid": {
      "description": "GUID of computer instance must be requested on",
      "type": "string"
    },
    "mariadb": {
      "description": "Relational database service",
      "additionalProperties": {
        "$ref": "./instance-mariadb-input-schema.json#properties"
      },
      "type": "object"
    },
    "zodb-computer-guid": {
      "description": "GUID of computer instance must be requested on",
      "type": "string"
    },
    "zodb-software-type": {
      "description": "Zope Object DataBase implementation",
      "enum": ["zeo"],
      "type": "string"
    },
    "zodb": {
      "description": "Zope Object DataBase service",
      "oneOf": [
        {"$ref": "./instance-zeo-input-schema.json#properties"}
      ]
    },
    "zodb-extern": {
      "description": "External ZODB Mountpoints. See https://github.com/zopefoundation/ZODB/blob/3.10/src/ZODB/component.xml for extra options.",
      "minItems": 0,
      "items": {
        "required": ["storage_dict"],
        "properties": {
          "name": {
            "description": "Database name",
            "default": "main",
            "type": "string"
          },
          "mount_point": {
            "description": "Mount point",
            "default": "/",
            "type": "string"
          },
          "storage-type": {
            "description": "Storage type",
            "default": "NEOStorage",
            "type": "string"
          },
          "storage-dict": {
            "description": "Storage configuration. For NEOStorage, 'logfile' is automatically set (see http://git.erp5.org/gitweb/neoppod.git/blob/HEAD:/neo/client/component.xml for other settings).",
            "patternProperties": {
              ".": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "patternProperties": {
            ".": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "type": "array"
    }
  }
}

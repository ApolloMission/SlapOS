[buildout]
parts =
  publish-default-connection-parameters

eggs-directory = {{ eggs_directory }}
develop-eggs-directory = {{ develop_eggs_directory }}
offline = true

{% set erp5_request_parameters = erp5_published_values.get('erp5_request_parameters', '{}') -%}
# The previous line might not give valid json for 'None', for that we have to
# explicitly set 'erp5_request_parameters' value for empty json
{% if erp5_request_parameters=='' -%}
{%   set erp5_request_parameters = '{}' -%}
{% endif -%}
# Now, we'll load the required json for erp5_request_parameters
{% set erp5_request_parameters = json_module.loads(erp5_request_parameters) -%}

{% set publish_dict = {} -%}
{% for name, value in erp5_request_parameters.iteritems() -%}
{%  do publish_dict.__setitem__(name, value) -%}
{% endfor %}

{% set jupyter_family_name = 'family-' ~ jupyter_family -%}
{% set jupyter_family_url = publish_dict.get(jupyter_family_name) -%}

[publish-default-connection-parameters]
recipe = slapos.cookbook:publish.serialised
{% for name, value in publish_dict.items() -%}
{{ name }} = {{ value }} 
{% endfor -%}

{% if disable_jupyter=="False" %}
notebook-url = {{ notebook_url }}

{% if jupyter_family=="None" -%}
error-message = No jupyter-family defined in parameters
# None here is an identifier, not a string
{% elif jupyter_family_url==none -%}
  {% set error_message = 'No family exist with the family name ' ~ jupyter_family -%}
error-message = {{ error_message }}
{% else -%}
jupyter-family-url = {{ jupyter_family_url }} 
{% endif -%}
{% endif -%}

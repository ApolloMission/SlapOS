[buildout]
parts = 
  slapos-test-runner

eggs-directory = ${buildout:eggs-directory}
develop-eggs-directory = ${buildout:develop-eggs-directory}
offline = true

[download-source]
recipe = plone.recipe.command
location = $${rootdirectory:source-code}/$${:_buildout_section_name_}
stop-on-error = true
branch = master
revision =
command = "${git:location}/bin/git" clone --quiet --branch "$${:branch}" "$${:repository}" "$${:location}" && if [ -n "$${:revision}" ]; then cd "$${:location}" && "${git:location}/bin/git" reset --quiet --hard "$${:revision}" ; fi
update-command = cd "$${:location}" && "${git:location}/bin/git" fetch && if [ -n "$${:revision}" ]; then "${git:location}/bin/git" reset --hard "$${:revision}"; else "${git:location}/bin/git" reset --hard @{upstream} ; fi


# Local development
[slapos.core]
<= download-source
repository = ${slapos.core-repository:location}

[slapos.recipe.template]
<= download-source
repository = ${slapos.recipe.template-repository:location}

[slapos-test-runner]
recipe = slapos.cookbook:egg_test

run-test-suite = $${buildout:bin-directory}/runTestSuite

run-test-suite-binary = ${buildout:bin-directory}/runTestSuite

# The list of executables should be defined here and a combination
# of tests should dynamically generated.
#python-list = $${}

test-list = $${slapos.recipe.template:location},$${slapos.core:location}

[rootdirectory]
recipe = slapos.cookbook:mkdirectory
etc = $${buildout:directory}/etc
srv = $${buildout:directory}/srv
source-code = $${:srv}/eggs-source-code
bin = $${buildout:directory}/bin

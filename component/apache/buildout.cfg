[buildout]
parts =
  apache
  apache-antiloris

extends =
  ../libexpat/buildout.cfg
  ../libuuid/buildout.cfg
  ../gdbm/buildout.cfg
  ../openssl/buildout.cfg
  ../pcre/buildout.cfg
  ../pkgconfig/buildout.cfg
  ../sqlite3/buildout.cfg
  ../zlib/buildout.cfg

[apr]
recipe = hexagonit.recipe.download
version = 1.4.6
url = http://mir2.ovh.net/ftp.apache.org/dist/apr/apr-${:version}.tar.bz2
md5sum = ffee70a111fd07372982b0550bbb14b7
 
[apr-util]
recipe = hexagonit.recipe.download
version = 1.4.1
url = http://mir2.ovh.net/ftp.apache.org/dist/apr/apr-util-${:version}.tar.bz2
md5sum = 52b31b33fb1aa16e65ddaefc76e41151

[apache]
# inspired on http://old.aclark.net/team/aclark/blog/a-lamp-buildout-for-wordpress-and-other-php-apps/
recipe = slapos.recipe.cmmi
dependencies = gdbm libexpat libuuid openssl pcre pkgconfig sqlite3 zlib
version = 2.4.3
url = http://mir2.ovh.net/ftp.apache.org/dist/httpd/httpd-${:version}.tar.bz2
md5sum = 87aaf7bc7e8715f0455997bb8c6791aa
pre-configure = cp -ar ${apr:location}/apr-${apr:version} srclib/apr; cp -ar ${apr-util:location}/apr-util-${apr-util:version} srclib/apr-util
configure-options = 
  --disable-static
  --enable-authn-alias
  --enable-bucketeer
  --enable-cache
  --enable-case-filter
  --enable-case-filter-in
  --enable-cgid
  --enable-charset-lite
  --enable-disk-cache
  --enable-mem-cache
  --enable-echo
  --enable-exception-hook
  --enable-mods-shared=all
  --enable-optional-fn-export
  --enable-optional-fn-import
  --enable-optional-hook-export
  --enable-optional-hook-import
  --enable-proxy
  --enable-proxy-ajp
  --enable-proxy-balancer
  --enable-proxy-connect
  --enable-proxy-ftp
  --enable-proxy-http
  --enable-proxy-scgi
  --enable-dav
  --enable-dav-fs
  --enable-so
  --enable-ssl
  --disable-lua
  --with-included-apr
  --without-lber
  --without-ldap
  --without-ndbm
  --without-berkeley-db
  --without-pgsql
  --without-mysql
  --without-sqlite2
  --without-oracle
  --without-freedts
  --without-odbc
  --without-iconv
  --with-ssl=${openssl:prefix}
  --with-z=${zlib:prefix}
  --with-expat=${libexpat:prefix}
  --with-pcre=${pcre:prefix}
  --with-sqlite3=${sqlite3:prefix}
  --with-gdbm=${gdbm:prefix}
 
[apr-patches]
recipe = hexagonit.recipe.download
url = ${:_profile_base_location_}/cygwin-apr-patches.tar.gz
md5sum = b6a537dc01775fca8438c4434d23798a

[x86-cygwin-apache]
# Patch apr and apr-util after copied to srclib
dependencies = ${apache:dependencies} apr-patches
pre-configure = ${apache:pre-configure}; (cd srclib/apr; patch -p2 < ${apr-patches:location}/cygwin-apr-1.4.6.patch; cd ../apr-util; patch -p2 < ${apr-patches:location}/cygwin-apr-util-1.4.1.patch); true

patch-options = -p1
patches =
  ${:_profile_base_location_}/cygwin-httpd-2.4.3-no-undefined.patch
  ${:_profile_base_location_}/cygwin-httpd-2.4.3-src.patch

# Need rebase moduels in the cygwin, and because cygwin is running,
# some cygwin dlls can't be rebase, ignore this error.
# post-install = (cd %(prefix)s/modules; for i in *.so ; do rebase -q -s -d $i 2>/dev/null; done); true

[apache-antiloris]
# Note: Shall react on each build of apache and reinstall itself
recipe = slapos.recipe.cmmi
dependencies = apache
url = http://sourceforge.net/projects/mod-antiloris/files/mod_antiloris-0.4.tar.bz2/download
md5sum = 66862bf10e9be3a023e475604a28a0b4
configure-command = ${apache:prefix}/bin/apxs
configure-options = -c mod_antiloris.c
make-binary = ${:configure-command}
make-options = -i -a -n antiloris mod_antiloris.la
make-targets =
patch-options = -p0
patches =
  ${:_profile_base_location_}/mod_antiloris-apache-2.4.patch#4f074f035d3b37f3f3e71cd9616440f3

[x86-cygwin-apache-antiloris]
environment =
  LDFLAGS =-no-undefined

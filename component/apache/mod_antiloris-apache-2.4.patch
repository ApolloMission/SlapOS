--- mod_antiloris.c.orig	2009-07-28 15:27:42.000000000 +0200
+++ mod_antiloris.c	2012-02-22 11:13:45.132905332 +0100
@@ -22,12 +22,17 @@
 #include "http_connection.h"
 #include "http_log.h"
 #include "ap_mpm.h"
+#include "ap_release.h" 
 #include "apr_strings.h"
 #include "scoreboard.h"
 
 #define MODULE_NAME "mod_antiloris"
 #define MODULE_VERSION "0.4"
 
+#ifdef APLOG_USE_MODULE 
+APLOG_USE_MODULE(antiloris); 
+#endif 
+
 module AP_MODULE_DECLARE_DATA antiloris_module;
 
 static int server_limit, thread_limit;
@@ -103,6 +108,7 @@
     ap_log_error(APLOG_MARK, APLOG_NOTICE, 0, NULL, MODULE_NAME " " MODULE_VERSION " started");
     ap_mpm_query(AP_MPMQ_HARD_LIMIT_THREADS, &thread_limit);
     ap_mpm_query(AP_MPMQ_HARD_LIMIT_DAEMONS, &server_limit);
+    ap_add_version_component(p, MODULE_NAME "/" MODULE_VERSION); 
     return OK;
 }
 
@@ -123,14 +129,18 @@
     worker_score *ws_record;
     
     ws_record = &ap_scoreboard_image->servers[sbh->child_num][sbh->thread_num];
-    apr_cpystrn(ws_record->client, c->remote_ip, sizeof(ws_record->client));
+    apr_cpystrn(ws_record->client, c->client_ip, sizeof(ws_record->client)); 
     
     char *client_ip = ws_record->client;
     
     /* Count up the number of connections we are handling right now from this IP address */
     for (i = 0; i < server_limit; ++i) {
 	for (j = 0; j < thread_limit; ++j) {
-    	    ws_record = ap_get_scoreboard_worker(i, j);
+#if AP_SERVER_MAJORVERSION_NUMBER == 2 && AP_SERVER_MINORVERSION_NUMBER > 2 
+            ws_record = ap_get_scoreboard_worker_from_indexes(i, j); 
+#else 
+            ws_record = ap_get_scoreboard_worker(i, j); 
+#endif 
             switch (ws_record->status) {
         	case SERVER_BUSY_READ:
             	    if (strcmp(client_ip, ws_record->client) == 0)
@@ -143,7 +153,7 @@
     }
     
     if (ip_count > conf->limit) {
-	ap_log_error(APLOG_MARK, APLOG_WARNING, 0, NULL, "Rejected, too many connections in READ state from %s", c->remote_ip);
+	ap_log_error(APLOG_MARK, APLOG_WARNING, 0, NULL, "[client %s] Antiloris rejected, too many connections", c->client_ip); 
 	return OK;
     } else {
 	return DECLINED;
@@ -151,17 +161,10 @@
 }
 
 
-static void child_init (apr_pool_t *p, server_rec *s)
-{
-    ap_add_version_component(p, MODULE_NAME "/" MODULE_VERSION);
-}
-
-
 static void register_hooks(apr_pool_t *p)
 {
     ap_hook_post_config(post_config, NULL, NULL, APR_HOOK_MIDDLE);
     ap_hook_process_connection(pre_connection, NULL, NULL, APR_HOOK_FIRST);
-    ap_hook_child_init(child_init, NULL, NULL, APR_HOOK_MIDDLE);    
 }
 
 module AP_MODULE_DECLARE_DATA antiloris_module = {

[buildout]

extends =
  ../m4/buildout.cfg
  ../libuuid/buildout.cfg
  ../pkgconfig/buildout.cfg
  ../glib/buildout.cfg
  ../git/buildout.cfg
  ../python-2.7/buildout.cfg

parts = 
  naclsdk
  zerovm

[zeromq]
recipe = hexagonit.recipe.cmmi
url = http://download.zeromq.org/zeromq-2.2.0.tar.gz
md5sum = 1b11aae09b19d18276d0717b2ea288f6
configure-options = 
  --disable-static

environment =
  PATH=${pkgconfig:location}/bin:${m4:location}/bin:%(PATH)s
  CPPFLAGS=-I${libuuid:location}/include
  LDFLAGS=-L${libuuid:location}/lib -Wl,-rpath=${libuuid:location}/lib

[nacl_sdk]
recipe = hexagonit.recipe.download
url = http://storage.googleapis.com/nativeclient-mirror/nacl/nacl_sdk/nacl_sdk.zip
md5sum = a436bcbb44e5b081dbfa20cc9a3ceb25
strip-top-level-dir = true

[naclsdk]
recipe = plone.recipe.command
command = cd ${nacl_sdk:location}; chmod 700 naclsdk; ${nacl_sdk:location}/naclsdk list; ${nacl_sdk:location}/naclsdk update --force pepper_23
stop-on-error = true
update-command = ${:command}

[zerovm-lib-patch]
recipe = hexagonit.recipe.download
md5sum = ec8f66b7850fa8a650381811c0122631
url = ${:_profile_base_location_}/${:filename}
filename = zerovm-patch-lib.patch
download-only = true
  
[zerovm-build]
recipe = hexagonit.recipe.cmmi
url = https://github.com/zerovm/zerovm/zipball/master
#md5sum = 
keep-compile-dir = true
configure-command = true
make-options = 
  LIBS="-lzmq -lglib-2.0 -lpthread -L${libuuid:location}/lib -L${zeromq:location}/lib -Wl,-rpath=${zeromq:location}/lib -L${glib:location}/lib -Wl,-rpath=${glib:location}/lib"
make-targets = 
  all
  tests
environment =
  PATH=${pkgconfig:location}/bin:${m4:location}/bin:%(PATH)s
  PKG_CONFIG_PATH=${openssl:location}/lib/pkgconfig:${glib:location}/lib/pkgconfig:${zeromq:location}/lib/pkgconfig

patches=
  ${zerovm-lib-patch:location}/${zerovm-lib-patch:filename}

patch-options=
  -p1

#Move zerovm compile dir to right directory at buildout:parts-directory/zerovm
[zerovm]
recipe = slapos.recipe.build
location = ${buildout:parts-directory}/${:_buildout_section_name_}
script =
  folder = os.path.join("${zerovm-build:compile-directory}", os.listdir("${zerovm-build:compile-directory}")[0])
  location = "${:location}"
  self.copyTree(folder, location)
  os.chmod(os.path.join(location, 'lib/bin/ncval'), 0765)
  os.chmod(os.path.join(location, 'lib/bin/ncval_stubout'), 0755)

[zrt-src]
recipe = slapos.recipe.build:gitclone
repository = http://github.com/zerovm/zrt.git
branch = master
git-executable = ${git:location}/bin/git
location = ${buildout:parts-directory}/${:_buildout_section_name_}

[zrt]
recipe = hexagonit.recipe.cmmi
url = ${zrt-src:location}
keep-compile-dir = true
configure-command = 
  mkdir -p ${:ncval_location}
  ln -sf ${nacl_sdk:location}/pepper_23/tools/ncval_x86_64 ${:ncval_location}/ncval
  sed -i 's#BINPATCH=binpatch#BINPATCH=/bin/true#' Makefile.env
nacl_location = ${nacl_sdk:location}/pepper_23/toolchain/linux_x86_glibc
ncval_location = ${buildout:parts-directory}/ncval
environment =
  PATH=${:ncval_location}:%(PATH)s
  NACL_SDK_ROOT=${:nacl_location}
  ZEROVM_ROOT=${zerovm:location}
  ZRT_ROOT=${buildout:parts-directory}/${:_buildout_section_name_}__compile__
  ZPYTHON_ROOT=${buildout:parts-directory}/zpython
make-targets = 
  all
make-options =
  -j1

[zpython-src]
recipe = slapos.recipe.build:gitclone
repository = http://github.com/zerovm/zpython.git
branch = master
git-executable = ${git:location}/bin/git
location = ${buildout:parts-directory}/${:_buildout_section_name_}

[zpython]
recipe = plone.recipe.command
location = ${buildout:parts-directory}/${:_buildout_section_name_}
zrt_location = ${zrt:compile-directory}
stop-on-error = true
command = 
  rm -rf ${:location};
  cp -r ${zpython-src:location} ${:location};
  cd ${:location};
  chmod 740 1build_pgen.sh 2configure_zpython.sh 3build_zpython_statically.sh;
  export PATH="${zrt:ncval_location}:$PATH";
  export NACL_SDK_ROOT="${nacl_sdk:location}/pepper_23";
  export ZEROVM_ROOT="${zerovm:location}";
  export ZRT_ROOT="${:zrt_location}";
  export ZPYTHON_ROOT="${buildout:parts-directory}/zpython";    
  export LDFLAGS="-L${:zrt_location}/lib";
  ./1build_pgen.sh;
  ./2configure_zpython.sh;
  ./3build_zpython_statically.sh;
update-command = 
#export LDFLAGS="-L${ncurses:location}/lib -Wl,-rpath=${ncurses:location}/lib -L${:zrt_location}/lib -Wl,-rpath=${:zrt_location}/lib";
#export CPPFLAGS="-I${ncurses:location}/include -I${ncurses:location}/include/ncursesw";
#export CPPFLAGS="-I${zlib:location}/include -I${readline:location}/include -I${libexpat:location}/include -I${ncurses:location}/include -I${ncurses:location}/include/ncursesw -I${bzip2:location}/include  -I${gdbm:location}/include -I${openssl:location}/include -I${sqlite3:location}/include -I${gettext:location}/include"
#export LDFLAGS="-L${zlib:location}/lib -L${readline:location}/lib -L${libexpat:location}/lib -L${ncurses:location}/lib -L${bzip2:location}/lib -L${gdbm:location}/lib -L${openssl:location}/lib -L${sqlite3:location}/lib -Wl,-rpath=${zlib:location}/lib -Wl,-rpath=${readline:location}/lib -Wl,-rpath=${libexpat:location}/lib -L${:zrt_location}/lib -Wl,-rpath=${:zrt_location}/lib"; -Wl,-rpath=${ncurses:location}/lib -Wl,-rpath=${bzip2:location}/lib -Wl,-rpath=${gdbm:location}/lib -Wl,-rpath=${openssl:location}/lib -Wl,-rpath=${sqlite3:location}/lib -L${gettext:location}/lib -Wl,-rpath=${gettext:location}/lib -Wl,-rpath=${file:location}/lib
#export CFLAGS="-I${:zrt_location}/lib";

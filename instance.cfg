[buildout]
parts =
  parameters
  get-chromium-sources
  build-chromiumos

# eggs given by software.cfg
eggs-directory = {{ eggs_directory }}
develop-eggs-directory = {{ develop_eggs_directory }}

#################################### Tools, sources getter ##################################

[clone-depot-tools]
# needed for the "repo" command (to download many git repositories)
recipe = slapos.recipe.build:gitclone
repository = https://chromium.googlesource.com/chromium/tools/depot_tools.git
branch = master

[depot-tools]
export-path =
  export PATH=${clone-depot-tools:location}:"$PATH";

[build-commands]
env =
  ${depot-tools:export-path}
  cd ${get-chromium-sources:location};

############################################################################################

[parameters]
# for use of the "parameters" XML configuration given from the
# webrunner interface
# if needed, .serialized => json (more complex structures are OK, but need another 
# jinja template for reading the content of the parameters)
recipe = slapos.cookbook:slapconfiguration
computer = ${slap_connection:computer_id}
partition = ${slap_connection:partition_id}
url = ${slap_connection:server_url}
key = ${slap_connection:key_file}
cert = ${slap_connection:cert_file}

[get-chromium-sources]
recipe = plone.recipe.command
stop-on-error = true
location = ${clone-depot-tools:location}/../chromiumos
command =
  echo "getting Chromium OS sources..."
  ${depot-tools:export-path}
  mkdir ${:location}
  cd ${:location}
  repo init -u https://chromium.googlesource.com/chromiumos/manifest.git -b ${parameters:configuration.branch}
  repo sync
update-command =
  ${depot-tools:export-path}
  cd ${:location}
  repo sync

[build-chromiumos]
recipe = plone.recipe.command
stop-on-error = true
command =
  ${build-commands:env}
#  cros_sdk --delete
  echo "building packages for Chromium OS..."
  cros_sdk -- ./build_packages --board=${parameters:configuration.board}
  && cros_sdk -- ./build_image --board=${parameters:configuration.board}
  && touch $(pwd)/${parameters:configuration.board}.img
  && cros flash --board=${parameters:configuration.board} file://$(pwd)/${parameters:configuration.board}.img
  
#!%(python_path)s

import httplib
import urllib
import base64

user = "%(user)s"
password = "%(password)s"
host = "%(host)s"
site_id = "%(site_id)s"
erp5_catalog_storage = 'erp5_mysql_innodb_catalog'
mysql_url = "%(sql_connection_string)s"
protocol = "%(protocol)s"

header_dict = {'Authorization': 'Basic %%s' %% \
  base64.encodestring('%%s:%%s' %% (user, password)).strip()}

if protocol == 'https':
  zope_connection = httplib.HTTPSConnection(host)
elif protocol == 'http':
  zope_connection = httplib.HTTPConnection(host)  
else:
  raise ValueError("Protocol not implemented")
  
# Check if an ERP5 site is already created, as ERP5 does support having
# 2 instances in the same zope, and this script should not destroy user data
zope_connection.request('GET', '/isERP5SitePresent', headers=header_dict)
result = zope_connection.getresponse()

if result.status == 204: # and (result.read() == "False"):

  # Use a new connection
  if protocol == 'https':
    zope_connection = httplib.HTTPSConnection(host)
  elif protocol == 'http':
    zope_connection = httplib.HTTPConnection(host)  
  else:
    raise ValueError("Protocol pot implemented") 

  # Create the expected ERP5 instance
  zope_connection.request(
    'POST', '/manage_addProduct/ERP5/manage_addERP5Site',
    urllib.urlencode({
      'id': site_id,
      'erp5_catalog_storage': erp5_catalog_storage,
      'erp5_sql_connection_string': mysql_url,
      'cmf_activity_sql_connection_string': mysql_url,
    }),
    headers=header_dict)
  # Wait for the erp5 response, to prevent multiple requests
  # been done by the same script.
  result = zope_connection.getresponse()

  # Read result make sure the site really finished to 
  #created the ERP5 site.
  result.read()
  print "ERP5 site created."


# Scalability: Install and configure small buisiness

is_scalability_case = %(scalability)%
if is_scalability_case:
  # Here check if configurator is available
  configurator_available = False
  if not configurator_available:
    if is_scalability_case:
      import os
      # Fix site consistency
      if protocol == 'https':
        zope_connection = httplib.HTTPSConnection(host)
      elif protocol == 'http':
        zope_connection = httplib.HTTPConnection(host)  
      else:
        raise ValueError("Protocol not implemented")
      zope_connection.request(
        'POST', '/ERP5Site_updateConfigurationConsistency',
        urllib.urlencode({
          'update_method': 'ERP5Site_updateConfigurationConsistency',
          'dialog_id': 'ERP5Site_viewCheckConsistency',
          'dialog_method': 'ERP5Site_fixConfigurationConsistency',
          'field_your_enable_alarm': 'on',
          'object_path': os.path.join('/', site_id),
          'uids;list':'598',
          'listbox_uid;list':'598',
          'uids;list':'595',
          'listbox_uid;list':'595',
          'uids;list':'599',
          'listbox_uid;list':'599',
        }),
        headers=header_dict)
      result = zope_connection.getresponse()
      result.read()

  # Here check if configurator is available
  configurator_available = False
  # Here check if S&MB not already installed
  configurator_already_applied = False
  if configurator_available and not configurator_already_applied:
    # install small and medium business via configurator
    pass

   

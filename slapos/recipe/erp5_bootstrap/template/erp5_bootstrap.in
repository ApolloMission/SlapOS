#!%(python_path)s

import httplib
import urllib
import base64
import time

MAX_INSTALLATION_TIME = 60*30

def getConnection(protocol, host):
  if protocol == 'https':
    return httplib.HTTPSConnection(host)
  elif protocol == 'http':
    return httplib.HTTPConnection(host)
  else:
    raise ValueError("Protocol not implemented")

user = "%(user)s"
password = "%(password)s"
host = "%(host)s"
site_id = "%(site_id)s"
mysql_url = "%(sql_connection_string)s"
protocol = "%(protocol)s"
scalability = "%(scalability)s" == "True"

erp5_catalog_storage = 'erp5_mysql_innodb_catalog'

header_dict = {'Authorization': 'Basic %%s' %% \
  base64.encodestring('%%s:%%s' %% (user, password)).strip()}

zope_connection = getConnection(protocol,host)
  
# Check if an ERP5 site is already created, as ERP5 does support having
# 2 instances in the same zope, and this script should not destroy user data
zope_connection.request('GET', '/isERP5SitePresent', headers=header_dict)
result = zope_connection.getresponse()

if result.status == 204: # and (result.read() == "False"):

  # Use a new connection
  zope_connection = getConnection(protocol,host)

  # Create the expected ERP5 instance
  zope_connection.request(
    'POST', '/manage_addProduct/ERP5/manage_addERP5Site',
    urllib.urlencode({
      'id': site_id,
      'erp5_catalog_storage': erp5_catalog_storage,
      'erp5_sql_connection_string': mysql_url,
      'cmf_activity_sql_connection_string': mysql_url,
    }),
    headers=header_dict)
  # Wait for the erp5 response, to prevent multiple requests
  # been done by the same script.
  result = zope_connection.getresponse()

  # Read result make sure the site really finished to
  # created the ERP5 site.
  print result.read()
  print "ERP5 site created."


#dirty way to wait erp5 site creation
time.sleep(30)


# Scalability: Install and configure small buisiness
if scalability:
  print "Scalability case"
  # Here check if configurator is available
  configurator_available = False
  if not configurator_available:
    # Fix site consistency
    zope_connection = getConnection(protocol,host)
    zope_connection.request(
      'GET', '/%%s/ERP5Site_launchFixConfigurationConsistency' %%(site_id),
      headers=header_dict
    )
    
    print "Check consistency sent"
    result = zope_connection.getresponse()
    print result.read()
    print "Response read"

  # Dirty way to wait configurator availability
  time.sleep(30)
  
  # Here check if configurator is available
  # Send a request ? How to know if it is ready/available ?
  configurator_available = False
  # Here check if S&MB not already installed
  configurator_already_applied = False

  business_object_name = "1"
  if configurator_available and not configurator_already_applied:
    # install small and medium business via configurator
    zope_connection = getConnection(protocol,host)
    zope_connection.request(
      'GET', '/%%s/business_configuration_module/%%s/build' %%(business_object_name, site_id),
      headers=header_dict
    )
    print "Business building sent"
    print result.read()
    print "Response read"


    # Here, how to know if the build is ready ?
    # Check size of :
    # https://192.168.242.72:1234/erp5/portal_activities/getMessageList
    # Wait for 0-pending activities
    start_time = time.time()
    while MAX_INSTALLATION_TIME > time.time()-start_time:
      zope_connection = getConnection(protocol,host)
      zope_connection.request(
        'GET', '/%%s/portal_activities/getMessageList' %%(site_id),
        headers=header_dict
      )
      message_list_text = result.read()
      message_list = [s.strip() for s in message_list_text[1:-1].split(',')]
      if len(message_list)==0:
        print "There is no pending activities."
        print "Testing scalability business configuration is ready."
        break
      print "Testing scalability business configuration not ready yet"
      time.sleep(15)
      
      
